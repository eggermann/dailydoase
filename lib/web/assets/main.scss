$bp-s: 320px;
$bp-m: 720px;
$bp-l: 1200px;

$element-spce-2: .7rem;
$element-spce-4: 1.6rem;

@import 'scss/headroom';
@import 'scss/c-back-to-top';
@import 'scss/image-panel';

:root {
  --max-page-width: 100%;

  @media screen and (min-width: $bp-s) {
    --max-page-width: 94vw;
  }

  @media screen and (min-width: $bp-m) {

    --max-page-width: 90vw;

  }

  @media screen and (min-width: $bp-l) {
    --max-page-width: 1380px;
  }
}


@mixin spawnMaxColumn() {
  max-width: var(--max-page-width);
  margin: 0 auto;
  width: 100%;
}


.a-cessibility {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

body {
  background-color: #000;

  &.play {
    .realease {
    }

    footer * {
      display: none;
    }
  }
}

header {
  z-index: 1;
  margin-bottom: $element-spce-4;
  position: sticky;
  left: 0;
  top: 0;
  transition: transform .2s;

  &.headroom--unpinned {
    transform: translateY(-100%);
  }

  &.headroom--pinned {
    transform: translateY(0);

    h2 {
      margin-top: $element-spce-4;
     // transform: translateY(2rem);
    }
  }
}

aside {

  .c-aside__menu {

    &.opened-menu {
      height: min-content;
      opacity: .4;

      button {
        position: relative;
        //   transform: scaleX(1.5) rotate(53deg);
      }

      ul {
        display: none;
      }
    }

    @include spawnMaxColumn();
    z-index: 22;
    position: fixed;
    filter: hue-rotate(-130deg);
    width: max-content;
    background-color: firebrick;
    margin-top: $element-spce-4 *3;

    width: max-content;

    &:not(:hover) {
      mix-blend-mode: plus-lighter;
    }

    &__button {


      border: 0;
      background: transparent;
      color: yellow;
      position: absolute;
      right: 0;
      padding-left: .6em;
    }


    top: 0;
    bottom: 0;
    position: fixed;
    overflow-y: scroll;
    overflow-x: hidden;

    ul li:last-child {
      margin-bottom: $element-spce-4*1.5;
    }

    a {
      max-width: 12ch;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      display: inline-block;

      &[aria-current="true"] {
        border: 5px solid yellow;
        mix-blend-mode: difference;
        filter: hue-rotate(45deg);
      }

      &:hover {
        filter: drop-shadow(2px 4px 6px black);
      }


    }

    .image-cntr a {
      text-decoration: none;
    }
  }

  .c-link-to-handmade-section {
    display: none;
    opacity: .4;
    bottom: 0;
    position: fixed;
    background-color: rgba(255, 255, 255, .3);

    &:hover {
      opacity: 1;
    }
  }

}

main {
  //@include spawnMaxColumn();
}


h1 {
  color: yellow;
  font-family: sans-serif;
  font-style: italic;
  font-weight: 100;
  letter-spacing: .13em;
  transform: translate(0.14em, -0.5em);
  display: inline-block;
}

h2 {
  color: yellow;
  font-family: sans-serif;
  font-style: italic;
  font-weight: 100;
  letter-spacing: .13em;
  transform: translate(0.14em, -0.5em);
  display: inline-block;
}

footer {
  padding-top: $element-spce-4;
  @include spawnMaxColumn();
  align-items: center;
  display: flex;
  flex-flow: column;
}

.folder {

}

.menu-actions {

  .toggle-view { //https://css-tricks.com/making-pure-css-playPause-button/
    //padding:0.1e. 2em;
    transform: scale(.7);

    label {
      display: block;
      box-sizing: border-box;
      width: 0;
      height: 74px;

      border-color: dotted dotted dotted dotted;
      transition: 100ms all ease;
      cursor: pointer;
      border-style: double;
      border-width: 0px 0 0px 60px;
    }

    input[type="checkbox"] {
      position: absolute;
      left: -9999px;

      &:checked + label {
        border-style: solid;
        border-width: 37px 0 37px 60px;
      }

      &:focus + label {
        box-shadow: 0 0 5px lightblue;
      }
    }
  }

  .playPause { //https://css-tricks.com/making-pure-css-playPause-button/
    //padding:0.1e. 2em;
    transform: scale(.7);

    label {
      display: block;
      box-sizing: border-box;
      width: 0;
      height: 74px;

      border-color: transparent transparent transparent #202020;
      transition: 100ms all ease;
      cursor: pointer;
      border-style: double;
      border-width: 0px 0 0px 60px;
    }

    input[type="checkbox"] {
      position: absolute;
      left: -9999px;

      &:checked + label {
        border-style: solid;
        border-width: 37px 0 37px 60px;
      }

      &:focus + label {
        box-shadow: 0 0 5px lightblue;
      }
    }
  }
}

main {
  &[style="display: none"] {
    display: inherit !important;
  }

  //@include spawnMaxColumn();
}

.toggle-view{display: none}